#version: "3.8"
#
#services:
#  backend:
#    build: ./Backend/api
#    ports:
#      - "3100:3100"
#    volumes:
#      - ./Backend/api:/app
#      - /app/node_modules
#    environment:
#      - NODE_ENV=development
#    restart: unless-stopped
#
#  frontend:
#    build: ./Frontend
#    ports:
#      - "4200:4200"
#    volumes:
#      - ./Frontend:/app
#      - /app/node_modules
#    command: sh -c "npm run start -- --host 0.0.0.0 --port 4200 --disable-host-check --poll 1000"
#    environment:
#      - CHOKIDAR_USEPOLLING=true
#    stdin_open: true
#    tty: true
#
#
#
#    #  frontend:
#    #    build: ./Frontend
#    #    ports:
#    #      - "4200:4200"
#    #    volumes:
#    #      - ./Frontend:/app
#    #      - /app/node_modules
#    #    environment:
#    #      - NODE_ENV=development
#    #      - API_URL=http://backend:3100
#    #    command: npm run start
#    #    depends_on:
#    #      - backend
#    #    restart: unless-stopped
#version: "3.8"
#
#services:
#  backend:
#    build: ./Backend/api
#    ports:
#      - "0.0.0.0:3100:3100"  # Explicitly bind to all interfaces
#    volumes:
#      - ./Backend/api:/app
#      - /app/node_modules
#    environment:
#      - NODE_ENV=development
#      - HOST=0.0.0.0  # Ensure backend binds to all interfaces
#    restart: unless-stopped
#    networks:
#      - quickcv-net
#
#  frontend:
#    build: ./Frontend
#    ports:
#      - "0.0.0.0:4200:4200"  # Explicitly bind to all interfaces
#    volumes:
#      - ./Frontend:/app
#      - /app/node_modules
#    command: sh -c "npm run start -- --host 0.0.0.0 --port 4200 --disable-host-check --poll 1000"
#    environment:
#      - CHOKIDAR_USEPOLLING=true
#      - API_URL=http://backend:3100  # For container-to-container communication
#    stdin_open: true
#    tty: true
#    depends_on:
#      - backend
#    networks:
#      - quickcv-net
#
#networks:
#  quickcv-net:
#    driver: bridge